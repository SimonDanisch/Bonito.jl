í«,jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÄ£subÇßpayloadì»·kí«,jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÄ£subÇßpayloadî»ékí«OjìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÉ¢34«eí¢34¢33◊eí¢33ì¢35«eí¢35£subÉ£obs«h¢34ßpayload»fìÇ≤448134870270263505«h¢35¥13891034387674255157«h¢33Ÿßreturn (index) => {
    const values = __lookup_interpolated('13891034387674255157').value
    __lookup_interpolated('448134870270263505').notify(values[index - 1])
}
Ÿ8/home/runner/work/Bonito.jl/Bonito.jl/src/widgets.jl:272®msg_type°1»kí«8jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÅ¢38«eí¢38°3£subÉ£obs«h¢38ßpayload«¿fìÄŸireturn value=> Bonito.update_node_attribute(document.querySelector('[data-jscall-id="5"]'), 'max', value)ŸQ/home/runner/work/Bonito.jl/Bonito.jl/src/rendering/hyperscript_integration.jl:92®msg_type°1»kí«8jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÅ¢39«eí¢39°1£subÉ£obs«h¢39ßpayload«¬fìÄŸkreturn value=> Bonito.update_node_attribute(document.querySelector('[data-jscall-id="5"]'), 'value', value)ŸQ/home/runner/work/Bonito.jl/Bonito.jl/src/rendering/hyperscript_integration.jl:92®msg_type°1»¬kí«,jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÄ£subÇßpayload»zfìÅ≥5718688673313272577«h¢34⁄!((node) => {
    node['oninput'] = (event)=> {
    const idx = event.srcElement.valueAsNumber;
    if (idx !== __lookup_interpolated('5718688673313272577').value) {
        __lookup_interpolated('5718688673313272577').notify(idx)
    }
}
})(document.querySelector('[data-jscall-id="5"]'));Ÿ8/home/runner/work/Bonito.jl/Bonito.jl/src/widgets.jl:287®msg_type°2®msg_type°9»kí«,jìŸ$80867927-ec48-4ec3-8e1c-3234b15a81cfÄ£subÇßpayload»ÕfìÅ≥1940160987729881546É°1ë«Mkí«-jìŸ$9b1a93d3-3862-4544-95da-ccf81fe88e87Ä§rootÉßpayload°1¢id¢39®msg_type°0°2ë«Mkí«-jìŸ$9b1a93d3-3862-4544-95da-ccf81fe88e87Ä§rootÉßpayload°2¢id¢39®msg_type°0°3ë«Mkí«-jìŸ$9b1a93d3-3862-4544-95da-ccf81fe88e87Ä§rootÉßpayload°3¢id¢39®msg_type°0⁄ÅBonito.fetch_binary('bonito/bin/bab06093d7e6d57ec402d2ffdf6fd5bbc2826a17-4968774335501131307.bin').then(binary => {
    const statemap = __lookup_interpolated('1940160987729881546')
    console.log(statemap)
    const observables = Bonito.decode_binary(binary, false);
    Bonito.onany(observables, (states) => {
        console.log(states)
        // messages to send for this state of that observable
        const messages = statemap[states]
        // not all states trigger events
        // so some states won't have any messages recorded
        if (messages){
            messages.forEach(Bonito.process_message)
        }
    })
})
Ÿ7/home/runner/work/Bonito.jl/Bonito.jl/src/export.jl:144®msg_type°2«Fkí«-jìŸ$9b1a93d3-3862-4544-95da-ccf81fe88e87Ä§rootÇßpayloadê®msg_type°9®msg_type°9