import{_ as p,C as h,c as k,o,j as i,a as n,aA as l,G as t,w as e}from"./chunks/framework.CGxuVltW.js";const xs=JSON.parse('{"title":"Api","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),r={name:"api.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""};function vs(_s,s,js,Ts,As,Ss){const a=h("Badge");return o(),k("div",null,[s[265]||(s[265]=i("h1",{id:"api",tabindex:"-1"},[n("Api "),i("a",{class:"header-anchor",href:"#api","aria-label":'Permalink to "Api"'},"​")],-1)),s[266]||(s[266]=i("h2",{id:"Public-Functions",tabindex:"-1"},[n("Public Functions "),i("a",{class:"header-anchor",href:"#Public-Functions","aria-label":'Permalink to "Public Functions {#Public-Functions}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Bonito.App",href:"#Bonito.App"},[i("span",{class:"jlbinding"},"Bonito.App")],-1)),s[1]||(s[1]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback_or_dom; title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bonito App&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((session, request) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP.Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bonito</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>If you depend on global observable, make sure to bind it to the session. This is pretty important, since every time you display the app, listeners will get registered to it, that will just continue staying there until your Julia process gets closed. <code>bind_global</code> prevents that by binding the observable to the life cycle of the session and cleaning up the state after the app isn&#39;t displayed anymore. If you serve the <code>App</code> via a <code>Server</code>, be aware, that those globals will be shared with everyone visiting the page, so possibly by many users concurrently.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> some_observable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;global hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bound_global </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bind_global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, some_observable)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bound_global)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,5)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/app.jl#L1-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Bonito.Asset",href:"#Bonito.Asset"},[i("span",{class:"jlbinding"},"Bonito.Asset")],-1)),s[5]||(s[5]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=i("p",null,"Represent an asset stored at an URL. We try to always have online & local files for assets",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L28-L31",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",E,[i("summary",null,[s[8]||(s[8]=i("a",{id:"Bonito.CodeEditor-Tuple{String}",href:"#Bonito.CodeEditor-Tuple{String}"},[i("span",{class:"jlbinding"},"Bonito.CodeEditor")],-1)),s[9]||(s[9]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CodeEditor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(language</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; initial_source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chrome&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, editor_options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defaults for <code>editor_options</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(</span></span>
<span class="line"><span>    autoScrollEditorIntoView = true,</span></span>
<span class="line"><span>    copyWithEmptySelection = true,</span></span>
<span class="line"><span>    wrapBehavioursEnabled = true,</span></span>
<span class="line"><span>    useSoftTabs = true,</span></span>
<span class="line"><span>    enableMultiselect = true,</span></span>
<span class="line"><span>    showLineNumbers = false,</span></span>
<span class="line"><span>    fontSize = 16,</span></span>
<span class="line"><span>    wrap = 80,</span></span>
<span class="line"><span>    mergeUndoDeltas = &quot;always&quot;</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>The content of the editor (as a string) is updated in <code>editor.onchange::Observable</code>.</p>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L437-L455",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",y,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Bonito.Dropdown",href:"#Bonito.Dropdown"},[i("span",{class:"jlbinding"},"Bonito.Dropdown")],-1)),s[13]||(s[13]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[15]||(s[15]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dropdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options; index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, option_to_string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dom_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A simple Dropdown, which can be styled via the <code>style::Styles</code> attribute.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;font-weight&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;silver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:focus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box-shadow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rgba(0, 0, 0, 0.5) 0px 0px 5px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dropdown </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dropdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">style)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dropdown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dropdown</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L178-L188",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",c,[i("summary",null,[s[16]||(s[16]=i("a",{id:"Bonito.NoServer",href:"#Bonito.NoServer"},[i("span",{class:"jlbinding"},"Bonito.NoServer")],-1)),s[17]||(s[17]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[19]||(s[19]=i("p",null,"We don't serve files and include anything directly as raw bytes. Interpolating the same asset many times, will only upload the file to JS one time though.",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/asset-serving/no-server.jl#L1-L4",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",u,[i("summary",null,[s[20]||(s[20]=i("a",{id:"Bonito.Session",href:"#Bonito.Session"},[i("span",{class:"jlbinding"},"Bonito.Session")],-1)),s[21]||(s[21]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=i("p",null,"A web session with a user",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L163-L165",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"Bonito.StylableSlider-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T",href:"#Bonito.StylableSlider-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T"},[i("span",{class:"jlbinding"},"Bonito.StylableSlider")],-1)),s[25]||(s[25]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StylableSlider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(range),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    slider_height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    thumb_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slider_height,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    thumb_height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slider_height,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slider_height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_active_height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">track_height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backgroundcolor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;transparent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#eee&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_active_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#ddd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    thumb_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#fff&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    thumb_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    track_active_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a Stylable Slider, where the basic attributes are easily custimizable via keyword arguments, while the more advanced details can be styled via the <code>style</code>, <code>track_style</code>, <code>thumb_style</code> and <code>track_active_style</code> arguments with the whole might of CSS. This does not use <code>&lt;input type=&quot;range&quot;&gt;</code> but is a custom implementation using <code>&lt;div&gt;</code>s javascript, since it is not easily possible to style the native slider in a cross-browser way. For using pure HTML sliders, use <code>Bonito.Slider</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StylableSlider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        slider_height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        track_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lightblue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        track_active_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#F0F8FF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        thumb_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#fff&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lightgray&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;border-radius&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        track_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;border-radius&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;border&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1px solid black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        thumb_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;border-radius&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;border&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1px solid black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L199-L229",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",F,[i("summary",null,[s[28]||(s[28]=i("a",{id:"Bonito.Styles",href:"#Bonito.Styles"},[i("span",{class:"jlbinding"},"Bonito.Styles")],-1)),s[29]||(s[29]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[31]||(s[31]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(css</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CSS...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a Styles object, which represents a Set of CSS objects. You can insert the Styles object into a DOM node, and it will be rendered as a <code>&lt;style&gt;</code> node. If you assign it directly to <code>DOM.div(style=Style(...))</code>, the styling will be applied to the specific div. Note, that per <code>Session</code>, each unique css object in all <code>Styles</code> across the session will only be rendered once. This makes it easy to create Styling inside of components, while not worrying about creating lots of Style nodes on the page. There are a two more convenience constructors to make <code>Styles</code> a bit easier to use:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pairs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pairs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(priority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(defaults</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), priority)</span></span></code></pre></div><p>For styling components, it&#39;s recommended, to always allow user to merge in customizations of a Style, like this:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(style, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>All Bonito components are stylable this way.</p><div class="tip custom-block"><p class="custom-block-title">Info</p><p>Why not <code>Hyperscript.Style</code>? While the scoped styling via <code>Hyperscript.Style</code> is great, it makes it harder to create stylable components, since it doesn&#39;t allow the deduplication of CSS objects across the session. It&#39;s also significantly slower, since it&#39;s not as specialized on the deduplication and the camelcase keyword to css attribute conversion is pretty costly. That&#39;s also why <code>CSS</code> uses pairs of strings instead of keyword arguments.</p></div>`,7)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L129-L155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",C,[i("summary",null,[s[32]||(s[32]=i("a",{id:"Bonito.WebSocketConnection-Tuple{Any, HTTP.WebSockets.WebSocket}",href:"#Bonito.WebSocketConnection-Tuple{Any, HTTP.WebSockets.WebSocket}"},[i("span",{class:"jlbinding"},"Bonito.WebSocketConnection")],-1)),s[33]||(s[33]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handles a new websocket connection to a session</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[34]||(s[34]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket.jl#L31-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",f,[i("summary",null,[s[36]||(s[36]=i("a",{id:"WidgetsBase.Button",href:"#WidgetsBase.Button"},[i("span",{class:"jlbinding"},"WidgetsBase.Button")],-1)),s[37]||(s[37]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[39]||(s[39]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dom_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A simple button, which can be styled a <code>style::Styles</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;font-weight&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;silver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:focus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box-shadow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rgba(0, 0, 0, 0.5) 0px 0px 5px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    button </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Click me&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">style)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> click</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Button clicked!&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> button</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[38]||(s[38]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L48-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",m,[i("summary",null,[s[40]||(s[40]=i("a",{id:"WidgetsBase.Checkbox",href:"#WidgetsBase.Checkbox"},[i("span",{class:"jlbinding"},"WidgetsBase.Checkbox")],-1)),s[41]||(s[41]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[43]||(s[43]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Checkbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(default_value; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dom_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A simple Checkbox, which can be styled via the <code>style::Styles</code> attribute.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[42]||(s[42]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L330-L334",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",B,[i("summary",null,[s[44]||(s[44]=i("a",{id:"WidgetsBase.NumberInput",href:"#WidgetsBase.NumberInput"},[i("span",{class:"jlbinding"},"WidgetsBase.NumberInput")],-1)),s[45]||(s[45]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[47]||(s[47]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NumberInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(default_value; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dom_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A simple NumberInput, which can be styled via the <code>style::Styles</code> attribute.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;font-weight&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;silver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:focus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box-shadow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rgba(0, 0, 0, 0.5) 0px 0px 5px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    numberinput </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NumberInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">style)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(numberinput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numberinput</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[46]||(s[46]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L131-L141",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",v,[i("summary",null,[s[48]||(s[48]=i("a",{id:"WidgetsBase.TextField",href:"#WidgetsBase.TextField"},[i("span",{class:"jlbinding"},"WidgetsBase.TextField")],-1)),s[49]||(s[49]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[51]||(s[51]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(default_text; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dom_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A simple TextField, which can be styled via the <code>style::Styles</code> attribute.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;font-weight&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;500&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;silver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:focus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box-shadow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rgba(0, 0, 0, 0.5) 0px 0px 5px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textfield </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;write something&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">style)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(textfield</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textfield</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[50]||(s[50]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L89-L99",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",_,[i("summary",null,[s[52]||(s[52]=i("a",{id:"Bonito.Card-Tuple{Any}",href:"#Bonito.Card-Tuple{Any}"},[i("span",{class:"jlbinding"},"Bonito.Card")],-1)),s[53]||(s[53]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backgroundcolor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RGBA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shadow_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 4px 8px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    padding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;12px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    margin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shadow_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RGBA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    border_radius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    div_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A Card is a container with a shadow and rounded corners. It is a good way to group elements together and make them stand out from the background. One can easily style them via the above keyword arguments or via the <code>style</code> argument with any CSS attribute.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            DOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a card&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;200px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;200px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            backgroundcolor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            shadow_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 0 10px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            shadow_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            padding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;20px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            margin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;20px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            border_radius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;20px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lightgray&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[54]||(s[54]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L20-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",j,[i("summary",null,[s[56]||(s[56]=i("a",{id:"Bonito.Centered-Tuple{Any}",href:"#Bonito.Centered-Tuple{Any}"},[i("span",{class:"jlbinding"},"Bonito.Centered")],-1)),s[57]||(s[57]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Centered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), grid_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates an element where the content is centered via <code>Grid</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[58]||(s[58]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L145-L149",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",T,[i("summary",null,[s[60]||(s[60]=i("a",{id:"Bonito.Col-Tuple",href:"#Bonito.Col-Tuple"},[i("span",{class:"jlbinding"},"Bonito.Col")],-1)),s[61]||(s[61]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Col</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(elems</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; grid_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Places objects in a column, based on <code>Grid</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[62]||(s[62]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L136-L140",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",A,[i("summary",null,[s[64]||(s[64]=i("a",{id:"Bonito.Grid-Tuple",href:"#Bonito.Grid-Tuple"},[i("span",{class:"jlbinding"},"Bonito.Grid")],-1)),s[65]||(s[65]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[67]||(s[67]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    elems</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # All below Attributes are set to the default CSS values:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    areas</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    justify_content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    justify_items</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;legacy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align_content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align_items</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;legacy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    div_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A Grid is a container that lays out its children in a grid, based on the powerful css <code>display: grid</code> property.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[66]||(s[66]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L72-L91",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",S,[i("summary",null,[s[68]||(s[68]=i("a",{id:"Bonito.Labeled-Tuple{Any, Any}",href:"#Bonito.Labeled-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"Bonito.Labeled")],-1)),s[69]||(s[69]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[71]||(s[71]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Labeled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(object, label; label_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A Labeled container with a simople layout to put a label next to an object.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label_style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;color&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;padding&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;font-size&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.5rem&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;text-shadow&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0px 0px 10px black, 1px 1px 3px black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    slider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StylableSlider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Labeled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slider, slider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value; label_style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">label_style, width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); backgroundcolor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gray&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,3)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[70]||(s[70]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L428-L436",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",D,[i("summary",null,[s[72]||(s[72]=i("a",{id:"Bonito.Page-Tuple{}",href:"#Bonito.Page-Tuple{}"},[i("span",{class:"jlbinding"},"Bonito.Page")],-1)),s[73]||(s[73]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    offline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exportable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, FrontendConnection}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A Page can be used for resetting the Bonito state in a multi page display outputs, like it&#39;s the case for Pluto/IJulia/Documenter. For Documenter, the page needs to be set to <code>exportable=true, offline=true</code>, but doesn&#39;t need to, since Page defaults to the most common parameters for known Packages. Exportable has the effect of inlining all data &amp; js dependencies, so that everything can be loaded in a single HTML object. <code>offline=true</code> will make the Page not even try to connect to a running Julia process, which makes sense for the kind of static export we do in Documenter. For convenience, one can also pass additional server configurations, which will directly get put into <code>configure_server!(;server_config...)</code>. Have a look at the docs for <code>configure_server!</code> to see the parameters.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[74]||(s[74]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/display.jl#L5-L20",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",x,[i("summary",null,[s[76]||(s[76]=i("a",{id:"Bonito.Row-Tuple",href:"#Bonito.Row-Tuple"},[i("span",{class:"jlbinding"},"Bonito.Row")],-1)),s[77]||(s[77]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[79]||(s[79]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(elems</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; grid_attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Places objects in a row, based on <code>Grid</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[78]||(s[78]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L125-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",q,[i("summary",null,[s[80]||(s[80]=i("a",{id:"Bonito.configure_server!-Tuple{}",href:"#Bonito.configure_server!-Tuple{}"},[i("span",{class:"jlbinding"},"Bonito.configure_server!")],-1)),s[81]||(s[81]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">configure_server!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        listen_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SERVER_CONFIGURATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listen_url[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        listen_port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SERVER_CONFIGURATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listen_port[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        forwarded_port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listen_port,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        proxy_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        content_delivery_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span></code></pre></div><p>Configures the parameters for the automatically started server.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Parameters:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* listen_url=SERVER_CONFIGURATION.listen_url[]</span></span>
<span class="line"><span>    The address the server listens to.</span></span>
<span class="line"><span>    must be 0.0.0.0, 127.0.0.1, ::, ::1, or localhost.</span></span>
<span class="line"><span>    If not set differently by an ENV variable, will default to 127.0.0.1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* listen_port::Integer=SERVER_CONFIGURATION.listen_port[],</span></span>
<span class="line"><span>    The Port to which the default server listens to</span></span>
<span class="line"><span>    If not set differently by an ENV variable, will default to 9384</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* forwarded_port::Integer=listen_port,</span></span>
<span class="line"><span>    if port gets forwarded to some other port, set it here!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* proxy_url=nothing</span></span>
<span class="line"><span>    The url from which the server is reachable.</span></span>
<span class="line"><span>    If served on &quot;127.0.0.1&quot;, this will default to http://localhost:forwarded_port</span></span>
<span class="line"><span>    if listen_url is &quot;0.0.0.0&quot;, this will default to http://$(Sockets.getipaddr()):forwarded_port</span></span>
<span class="line"><span>    so that the server is reachable inside the local network.</span></span>
<span class="line"><span>    If the server should be reachable from some external dns server,</span></span>
<span class="line"><span>    this needs to be set here.</span></span></code></pre></div>`,3)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[82]||(s[82]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/server-defaults.jl#L87-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",w,[i("summary",null,[s[84]||(s[84]=i("a",{id:"Bonito.evaljs-Tuple{Session, Bonito.JSCode}",href:"#Bonito.evaljs-Tuple{Session, Bonito.JSCode}"},[i("span",{class:"jlbinding"},"Bonito.evaljs")],-1)),s[85]||(s[85]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evaljs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evaluate a javascript script in <code>session</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[86]||(s[86]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L284-L288",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",P,[i("summary",null,[s[88]||(s[88]=i("a",{id:"Bonito.evaljs_value-Tuple{Session, Any}",href:"#Bonito.evaljs_value-Tuple{Session, Any}"},[i("span",{class:"jlbinding"},"Bonito.evaljs_value")],-1)),s[89]||(s[89]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[91]||(s[91]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evaljs_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, js</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evals <code>js</code> code and returns the jsonified value. Blocks until value is returned. May block indefinitely, when called with a session that doesn&#39;t have a connection to the browser.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[90]||(s[90]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L298-L304",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",I,[i("summary",null,[s[92]||(s[92]=i("a",{id:"Bonito.export_static-Tuple{String, App}",href:"#Bonito.export_static-Tuple{String, App}"},[i("span",{class:"jlbinding"},"Bonito.export_static")],-1)),s[93]||(s[93]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">export_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(html_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{IO, String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">export_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(folder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, routes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Routes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Exports the app defined by <code>app</code> with all its assets a single HTML file. Or exports all routes defined by <code>routes</code> to <code>folder</code>.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[94]||(s[94]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/export.jl#L188-L194",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",L,[i("summary",null,[s[96]||(s[96]=i("a",{id:"Bonito.interactive_server",href:"#Bonito.interactive_server"},[i("span",{class:"jlbinding"},"Bonito.interactive_server")],-1)),s[97]||(s[97]=n()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[99]||(s[99]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">interactive_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, paths, modules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]; url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8081</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, all</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Revise base server that will serve a static side based on Bonito and will update on any code change!</p><p>Usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Revise, Website</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Website</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bonito</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the interactive server and develop your website!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">routes, task, server </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> interactive_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Website</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">asset_paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Routes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Makie&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/team&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(team, title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Team&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/contact&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contact, title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Contact&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/support&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(support, title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Support&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Once everything looks good, export the static site</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@__DIR__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># only delete the bonito generated files</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bonito&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); recursive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, force</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">export_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dir, routes)</span></span></code></pre></div><p>For the complete code, visit the Makie website repository which is using Bonito: <a href="https://github.com/MakieOrg/Website/blob/sd/bonito/make.jl" target="_blank" rel="noreferrer">MakieOrg/Website</a></p>`,5)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[98]||(s[98]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/interactive.jl#L15-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",M,[i("summary",null,[s[100]||(s[100]=i("a",{id:"Bonito.linkjs-Tuple{Session, Observable, Observable}",href:"#Bonito.linkjs-Tuple{Session, Observable, Observable}"},[i("span",{class:"jlbinding"},"Bonito.linkjs")],-1)),s[101]||(s[101]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[103]||(s[103]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linkjs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>for an open session, link a and b on the javascript side. This will also Link the observables in Julia, but only as long as the session is active.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[102]||(s[102]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L269-L274",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",V,[i("summary",null,[s[104]||(s[104]=i("a",{id:"Bonito.onjs-Tuple{Session, Observable, Bonito.JSCode}",href:"#Bonito.onjs-Tuple{Session, Observable, Bonito.JSCode}"},[i("span",{class:"jlbinding"},"Bonito.onjs")],-1)),s[105]||(s[105]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[107]||(s[107]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onjs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Register a javascript function with <code>session</code>, that get&#39;s called when <code>obs</code> gets a new value. If the observable gets updated from the JS side, the calling of <code>func</code> will be triggered entirely in javascript, without any communication with the Julia <code>session</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[106]||(s[106]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L228-L234",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[267]||(s[267]=i("h2",{id:"Private-Functions",tabindex:"-1"},[n("Private Functions "),i("a",{class:"header-anchor",href:"#Private-Functions","aria-label":'Permalink to "Private Functions {#Private-Functions}"'},"​")],-1)),i("details",O,[i("summary",null,[s[108]||(s[108]=i("a",{id:"Bonito.AbstractWebsocketConnection",href:"#Bonito.AbstractWebsocketConnection"},[i("span",{class:"jlbinding"},"Bonito.AbstractWebsocketConnection")],-1)),s[109]||(s[109]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[111]||(s[111]=i("p",null,"Websocket based connection type",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[110]||(s[110]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/connection.jl#L40-L42",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",N,[i("summary",null,[s[112]||(s[112]=i("a",{id:"Bonito.CleanupPolicy",href:"#Bonito.CleanupPolicy"},[i("span",{class:"jlbinding"},"Bonito.CleanupPolicy")],-1)),s[113]||(s[113]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[115]||(s[115]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CleanupPolicy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>You can create a custom cleanup policy by subclassing this type. Implementing the <code>should_cleanup</code> and <code>allow_soft_close</code> methods is required. You can also implement <code>set_cleanup_time!</code>if it makes sense for your policy.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function should_cleanup(policy::MyCleanupPolicy, session::Session)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function allow_soft_close(policy::MyCleanupPolicy)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function set_cleanup_time!(policy::MyCleanupPolicy, time_in_hrs::Real)</span></span></code></pre></div><p>This is quite low level, and you implementaiton should probably start by copying <code>DefaultCleanupPolicy</code>.</p>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[114]||(s[114]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket.jl#L62-L76",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",R,[i("summary",null,[s[116]||(s[116]=i("a",{id:"Bonito.DefaultCleanupPolicy",href:"#Bonito.DefaultCleanupPolicy"},[i("span",{class:"jlbinding"},"Bonito.DefaultCleanupPolicy")],-1)),s[117]||(s[117]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[119]||(s[119]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mutable struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultCleanupPolicy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CleanupPolicy</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    session_open_wait_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cleanup_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>This is the default cleanup policy. It closes sessions after <code>session_open_wait_time</code> seconds (default 30) if the browser didn&#39;t connect back to the displayed session. It also closes sessions after <code>cleanup_time</code> hours (default 0) if the session closes cleanly, indicating that the browser may reconnect if a tab is later restored. It returns true for allow_soft_close(...) when <code>cleanup_time</code> is non-zero.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[118]||(s[118]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket.jl#L79-L91",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",J,[i("summary",null,[s[120]||(s[120]=i("a",{id:"Bonito.DualWebsocket-Tuple{Any, HTTP.WebSockets.WebSocket}",href:"#Bonito.DualWebsocket-Tuple{Any, HTTP.WebSockets.WebSocket}"},[i("span",{class:"jlbinding"},"Bonito.DualWebsocket")],-1)),s[121]||(s[121]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[123]||(s[123]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handles a new websocket connection to a session</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[122]||(s[122]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/dual-websocket.jl#L38-L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",W,[i("summary",null,[s[124]||(s[124]=i("a",{id:"Bonito.FrontendConnection",href:"#Bonito.FrontendConnection"},[i("span",{class:"jlbinding"},"Bonito.FrontendConnection")],-1)),s[125]||(s[125]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[127]||(s[127]=l(`<p><strong>Inteface for FrontendConnection</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyConnection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FrontendConnection</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Needs to have a constructor with 0 arguments:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Needs to overload <code>Base.write</code> for sending binary data</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bytes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{UInt8}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Needs to implement isopen to indicate status of connection</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isopen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Setup connection will be called before rendering any dom with <code>session</code>. The return value will be inserted into the DOM of the rendered App and can be used to do the JS part of opening the connection.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setup_connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session{IJuliaConnection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{JSCode, Nothing}</span></span></code></pre></div><p>One can overload <code>use_parent_session</code>, to turn on rendering dom objects inside sub-sessions while keeping one parent session managing the connection alive. This is handy for IJulia/Pluto, since the parent session just needs to be initialized one time and can stay active and globally store objects used multiple times across doms.</p><div class="language-Julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use_parent_session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session{MyConnection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div>`,12)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[126]||(s[126]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/connection.jl#L1-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",H,[i("summary",null,[s[128]||(s[128]=i("a",{id:"Bonito.JSCode",href:"#Bonito.JSCode"},[i("span",{class:"jlbinding"},"Bonito.JSCode")],-1)),s[129]||(s[129]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[131]||(s[131]=l('<p>Javascript code that supports interpolation of Julia Objects. Construction of JSCode via string macro:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console.log($(some_julia_variable))&quot;</span></span></code></pre></div><p>This will decompose into:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jsc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console.log(&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), some_julia_variable, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;)]</span></span></code></pre></div>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[130]||(s[130]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L8-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",U,[i("summary",null,[s[132]||(s[132]=i("a",{id:"Bonito.JSException-Tuple{Session, AbstractDict}",href:"#Bonito.JSException-Tuple{Session, AbstractDict}"},[i("span",{class:"jlbinding"},"Bonito.JSException")],-1)),s[133]||(s[133]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[135]||(s[135]=i("p",null,"Creates a Julia exception from data passed to us by the frondend!",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[134]||(s[134]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L286-L288",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",z,[i("summary",null,[s[136]||(s[136]=i("a",{id:"Bonito.JSString",href:"#Bonito.JSString"},[i("span",{class:"jlbinding"},"Bonito.JSString")],-1)),s[137]||(s[137]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[139]||(s[139]=i("p",null,"The string part of JSCode.",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[138]||(s[138]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/types.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",G,[i("summary",null,[s[140]||(s[140]=i("a",{id:"Bonito.JSUpdateObservable",href:"#Bonito.JSUpdateObservable"},[i("span",{class:"jlbinding"},"Bonito.JSUpdateObservable")],-1)),s[141]||(s[141]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[143]||(s[143]=i("p",null,"Functor to update JS part when an observable changes. We make this a Functor, so we can clearly identify it and don't sent any updates, if the JS side requires to update an Observable (so we don't get an endless update cycle)",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[142]||(s[142]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/rendering/observables.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Y,[i("summary",null,[s[144]||(s[144]=i("a",{id:"Bonito.Table",href:"#Bonito.Table"},[i("span",{class:"jlbinding"},"Bonito.Table")],-1)),s[145]||(s[145]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[147]||(s[147]=i("p",null,"A simple wrapper for types that conform to the Tables.jl Table interface, which gets rendered nicely!",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[146]||(s[146]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/widgets.jl#L395-L398",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",$,[i("summary",null,[s[148]||(s[148]=i("a",{id:"Bonito.Label-Tuple{Any}",href:"#Bonito.Label-Tuple{Any}"},[i("span",{class:"jlbinding"},"Bonito.Label")],-1)),s[149]||(s[149]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[151]||(s[151]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value; style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A Label is a simple text element, with a bold font and a font size of 1rem.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[150]||(s[150]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/components.jl#L405-L409",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",K,[i("summary",null,[s[152]||(s[152]=i("a",{id:"Bonito.add_cached!-Tuple{Function, Session, Dict{String, Any}, Any}",href:"#Bonito.add_cached!-Tuple{Function, Session, Dict{String, Any}, Any}"},[i("span",{class:"jlbinding"},"Bonito.add_cached!")],-1)),s[153]||(s[153]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[155]||(s[155]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_cached!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(create_cached_object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, message_cache</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{String, Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Checks if key is already cached by the session or it&#39;s root session (we skip any child session between root -&gt; this session). If not cached already, we call <code>create_cached_object</code> to create a serialized form of the object corresponding to <code>key</code> and cache it. We return nothing if already cached, or the serialized object if not cached. We also handle the part of adding things to the message_cache from the serialization context.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[154]||(s[154]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/serialization/caching.jl#L87-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Q,[i("summary",null,[s[156]||(s[156]=i("a",{id:"Bonito.dependency_path-Tuple",href:"#Bonito.dependency_path-Tuple"},[i("span",{class:"jlbinding"},"Bonito.dependency_path")],-1)),s[157]||(s[157]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[159]||(s[159]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dependency_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(paths</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Path to serve downloaded dependencies</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[158]||(s[158]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/asset-serving/asset-serving.jl#L9-L13",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",X,[i("summary",null,[s[160]||(s[160]=i("a",{id:"Bonito.export_standalone-Tuple{App, String}",href:"#Bonito.export_standalone-Tuple{App, String}"},[i("span",{class:"jlbinding"},"Bonito.export_standalone")],-1)),s[161]||(s[161]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[163]||(s[163]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">export_standaloneexport_standalone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, folder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clear_folder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, write_index_html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    absolute_urls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, content_delivery_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file://&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> folder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    single_html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Exports the app defined by <code>app::Application</code> with all its assets to <code>folder</code>. Will write the main html out into <code>folder/index.html</code>. Overwrites all existing files! If this gets served behind a proxy, set <code>absolute_urls=true</code> and set <code>content_delivery_url</code> to your proxy url. If <code>clear_folder=true</code> all files in <code>folder</code> will get deleted before exporting again! <code>single_html=true</code> will write out a single html instead of writing out JS depencies as separate files.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[162]||(s[162]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/export.jl#L165-L179",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Z,[i("summary",null,[s[164]||(s[164]=i("a",{id:"Bonito.getextension-Tuple{AbstractString}",href:"#Bonito.getextension-Tuple{AbstractString}"},[i("span",{class:"jlbinding"},"Bonito.getextension")],-1)),s[165]||(s[165]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[167]||(s[167]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getextension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)</span></span></code></pre></div><p>Get the file extension of the path. The extension is defined to be the bit after the last dot, excluding any query string.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getextension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo.bar.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bonito</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getextension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my-cdn.net/foo.bar.css?version=1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;css&quot;</span></span></code></pre></div><p>Taken from WebIO.jl</p>`,5)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[166]||(s[166]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/asset-serving/asset.jl#L106-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ss,[i("summary",null,[s[168]||(s[168]=i("a",{id:"Bonito.is_online-Tuple{AbstractString}",href:"#Bonito.is_online-Tuple{AbstractString}"},[i("span",{class:"jlbinding"},"Bonito.is_online")],-1)),s[169]||(s[169]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[171]||(s[171]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_online</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)</span></span></code></pre></div><p>Determine whether or not the specified path is a local filesystem path (and not a remote resource that is hosted on, for example, a CDN).</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[170]||(s[170]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/asset-serving/asset.jl#L79-L84",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",is,[i("summary",null,[s[172]||(s[172]=i("a",{id:"Bonito.jsrender-Tuple{Session, Union{Number, String, Symbol}}",href:"#Bonito.jsrender-Tuple{Session, Union{Number, String, Symbol}}"},[i("span",{class:"jlbinding"},"Bonito.jsrender")],-1)),s[173]||(s[173]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[175]||(s[175]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">jsrender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Internal render method to create a valid dom. Registers used observables with a session And makes sure the dom only contains valid elements. Overload jsrender(::YourType) To enable putting YourType into a dom element/div. You can also overload it to take a session as first argument, to register messages with the current web session (e.g. via onjs).</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[174]||(s[174]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/rendering/jsrender.jl#L1-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",as,[i("summary",null,[s[176]||(s[176]=i("a",{id:"Bonito.on_document_load-Tuple{Session, Bonito.JSCode}",href:"#Bonito.on_document_load-Tuple{Session, Bonito.JSCode}"},[i("span",{class:"jlbinding"},"Bonito.on_document_load")],-1)),s[177]||(s[177]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[179]||(s[179]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on_document_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, js</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>executes javascript after document is loaded</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[178]||(s[178]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L260-L264",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ts,[i("summary",null,[s[180]||(s[180]=i("a",{id:"Bonito.onload-Tuple{Session, Hyperscript.Node, Bonito.JSCode}",href:"#Bonito.onload-Tuple{Session, Hyperscript.Node, Bonito.JSCode}"},[i("span",{class:"jlbinding"},"Bonito.onload")],-1)),s[181]||(s[181]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[183]||(s[183]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>calls javascript <code>func</code> with node, once node has been displayed.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[182]||(s[182]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L249-L253",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ns,[i("summary",null,[s[184]||(s[184]=i("a",{id:"Bonito.page_html-Tuple{IO, Session, Union{App, Hyperscript.Node}}",href:"#Bonito.page_html-Tuple{IO, Session, Union{App, Hyperscript.Node}}"},[i("span",{class:"jlbinding"},"Bonito.page_html")],-1)),s[185]||(s[185]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[187]||(s[187]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">page_html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, html_body)</span></span></code></pre></div><p>Embeds the html_body in a standalone html document!</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[186]||(s[186]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/display.jl#L107-L111",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",es,[i("summary",null,[s[188]||(s[188]=i("a",{id:"Bonito.process_message-Tuple{Session, AbstractVector{UInt8}}",href:"#Bonito.process_message-Tuple{Session, AbstractVector{UInt8}}"},[i("span",{class:"jlbinding"},"Bonito.process_message")],-1)),s[189]||(s[189]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[191]||(s[191]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">process_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bytes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{UInt8}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Handles the incoming websocket messages from the frontend. Messages are expected to be gzip compressed and packed via MsgPack.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[190]||(s[190]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/serialization/protocol.jl#L15-L20",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ls,[i("summary",null,[s[192]||(s[192]=i("a",{id:"Bonito.record_states-Tuple{Session, Hyperscript.Node}",href:"#Bonito.record_states-Tuple{Session, Hyperscript.Node}"},[i("span",{class:"jlbinding"},"Bonito.record_states")],-1)),s[193]||(s[193]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[195]||(s[195]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record_states</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Hyperscript.Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Records the states of all widgets in the dom. Any widget that implements the following interface will be found in the DOM and can be recorded:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Implementing interface for Bonito.Slider!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">value_range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">values[])</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to_watch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> slider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># the observable that will trigger JS state change</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>This is experimental and might change in the future! It can also create really large HTML files, since it needs to record all combinations of widget states. It&#39;s also not well optimized yet and may create a lot of duplicated messages.</p></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[194]||(s[194]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/export.jl#L90-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ps,[i("summary",null,[s[196]||(s[196]=i("a",{id:"Bonito.register_asset_server!-Union{Tuple{C}, Tuple{Function, Type{C}}} where C<:Bonito.AbstractAssetServer",href:"#Bonito.register_asset_server!-Union{Tuple{C}, Tuple{Function, Type{C}}} where C<:Bonito.AbstractAssetServer"},[i("span",{class:"jlbinding"},"Bonito.register_asset_server!")],-1)),s[197]||(s[197]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[199]||(s[199]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_asset_server!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(condition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;: AbstractAssetServer}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Registers a new asset server type. <code>condition</code> is a function that should return <code>nothing</code>, if the asset server type shouldn&#39;t be used, and an initialized asset server object, if the conditions are right. E.g. The <code>Bonito.NoServer</code> be used inside an IJulia notebook so it&#39;s registered like this:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_asset_server!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NoServer) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isdefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Main, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:IJulia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NoServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The last asset server registered takes priority, so if you register a new connection last in your Package, and always return it, You will overwrite the connection type for any other package. If you want to force usage temporary, try:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_asset_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(YourAssetServer) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># which is the same as:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_asset_server!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(YourAssetServer)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_asset_server!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,5)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[198]||(s[198]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/registry.jl#L48-L74",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",hs,[i("summary",null,[s[200]||(s[200]=i("a",{id:"Bonito.register_connection!-Union{Tuple{C}, Tuple{Function, Type{C}}} where C<:Bonito.FrontendConnection",href:"#Bonito.register_connection!-Union{Tuple{C}, Tuple{Function, Type{C}}} where C<:Bonito.FrontendConnection"},[i("span",{class:"jlbinding"},"Bonito.register_connection!")],-1)),s[201]||(s[201]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[203]||(s[203]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_connection!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(condition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;: FrontendConnection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Registers a new Connection type.</p><p>condition is a function that should return <code>nothing</code>, if the connection type shouldn&#39;t be used, and an initialized Connection, if the conditions are right. E.g. The IJulia connection should only be used inside an IJulia notebook so it&#39;s registered like this:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_connection!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(IJuliaConnection) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isdefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Main, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:IJulia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IJuliaConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The last connection registered take priority, so if you register a new connection last in your Package, and always return it, You will overwrite the connection type for any other package. If you want to force usage temporary, try:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(YourConnectionType) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># which is the same as:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_connection!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(YourConnectionType)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">force_connection!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,6)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[202]||(s[202]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/registry.jl#L97-L124",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ks,[i("summary",null,[s[204]||(s[204]=i("a",{id:"Bonito.replace_expressions-Union{Tuple{MT}, Tuple{MT, Dict, Bonito.RunnerLike}} where MT",href:"#Bonito.replace_expressions-Union{Tuple{MT}, Tuple{MT, Dict, Bonito.RunnerLike}} where MT"},[i("span",{class:"jlbinding"},"Bonito.replace_expressions")],-1)),s[205]||(s[205]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[207]||(s[207]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace_expressions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(markdown, context)</span></span></code></pre></div><p>Replaces all expressions inside <code>markdown</code> savely, by only supporting getindex/getfield expression that will index into <code>context</code></p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[206]||(s[206]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/rendering/markdown_integration.jl#L159-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",os,[i("summary",null,[s[208]||(s[208]=i("a",{id:"Bonito.run_connection_loop-Tuple{Session, Bonito.WebSocketHandler, HTTP.WebSockets.WebSocket}",href:"#Bonito.run_connection_loop-Tuple{Session, Bonito.WebSocketHandler, HTTP.WebSockets.WebSocket}"},[i("span",{class:"jlbinding"},"Bonito.run_connection_loop")],-1)),s[209]||(s[209]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[211]||(s[211]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">runs the main connection loop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the websocket</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[210]||(s[210]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket-handler.jl#L86-L88",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",rs,[i("summary",null,[s[212]||(s[212]=i("a",{id:"Bonito.set_cleanup_policy!-Tuple{Bonito.CleanupPolicy}",href:"#Bonito.set_cleanup_policy!-Tuple{Bonito.CleanupPolicy}"},[i("span",{class:"jlbinding"},"Bonito.set_cleanup_policy!")],-1)),s[213]||(s[213]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[215]||(s[215]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_cleanup_policy!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(policy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CleanupPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>You can set a custom cleanup policy by calling this function.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[214]||(s[214]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket.jl#L116-L120",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ds,[i("summary",null,[s[216]||(s[216]=i("a",{id:"Bonito.set_cleanup_time!-Tuple{Real}",href:"#Bonito.set_cleanup_time!-Tuple{Real}"},[i("span",{class:"jlbinding"},"Bonito.set_cleanup_time!")],-1)),s[217]||(s[217]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[219]||(s[219]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_cleanup_time!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(time_in_hrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the time that sessions remain open after the browser tab is closed. This allows reconnecting to the same session. Only works for Websocket connection inside VSCode right now, and will display the same App again from first display. State that isn&#39;t stored in Observables inside that app is lost.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[218]||(s[218]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket.jl#L99-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",gs,[i("summary",null,[s[220]||(s[220]=i("a",{id:"Bonito.setup_websocket_connection_js-Tuple{Any, Session}",href:"#Bonito.setup_websocket_connection_js-Tuple{Any, Session}"},[i("span",{class:"jlbinding"},"Bonito.setup_websocket_connection_js")],-1)),s[221]||(s[221]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[223]||(s[223]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">returns the javascript snippet to setup the connection</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[222]||(s[222]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/connection/websocket-handler.jl#L101-L103",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Es,[i("summary",null,[s[224]||(s[224]=i("a",{id:"Bonito.string_to_markdown",href:"#Bonito.string_to_markdown"},[i("span",{class:"jlbinding"},"Bonito.string_to_markdown")],-1)),s[225]||(s[225]=n()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[227]||(s[227]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string_to_markdown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; eval_julia_code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Replaces all interpolation expressions inside <code>markdown</code> savely, by only supporting getindex/getfield expression that will index into <code>context</code>. You can eval Julia code blocks by setting <code>eval_julia_code</code> to a Module, into which the code gets evaluated!</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[226]||(s[226]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/rendering/markdown_integration.jl#L229-L236",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ys,[i("summary",null,[s[228]||(s[228]=i("a",{id:"Bonito.update_nocycle!-Tuple{Observable, Any}",href:"#Bonito.update_nocycle!-Tuple{Observable, Any}"},[i("span",{class:"jlbinding"},"Bonito.update_nocycle!")],-1)),s[229]||(s[229]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[231]||(s[231]=i("p",null,"Update the value of an observable, without sending changes to the JS frontend. This will be used to update updates from the forntend.",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[230]||(s[230]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/rendering/observables.jl#L39-L42",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",cs,[i("summary",null,[s[232]||(s[232]=i("a",{id:"Sockets.send-Tuple{Session}",href:"#Sockets.send-Tuple{Session}"},[i("span",{class:"jlbinding"},"Sockets.send")],-1)),s[233]||(s[233]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[235]||(s[235]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Send values to the frontend via MsgPack for now</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[234]||(s[234]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/session.jl#L147-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",us,[i("summary",null,[s[236]||(s[236]=i("a",{id:"Bonito.HTTPServer.Server",href:"#Bonito.HTTPServer.Server"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.Server")],-1)),s[237]||(s[237]=n()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[239]||(s[239]=i("p",null,"HTTP server with websocket & http routes",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[238]||(s[238]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/implementation.jl#L6-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",bs,[i("summary",null,[s[240]||(s[240]=i("a",{id:"Bonito.HTTPServer.Server-Tuple{String, Int64}",href:"#Bonito.HTTPServer.Server-Tuple{String, Int64}"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.Server")],-1)),s[241]||(s[241]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[243]||(s[243]=i("p",null,"Server( dom, url::String, port::Int; verbose = -1 )",-1)),s[244]||(s[244]=i("p",null,"Creates an application that manages the global server state!",-1)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[242]||(s[242]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/implementation.jl#L246-L253",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Fs,[i("summary",null,[s[245]||(s[245]=i("a",{id:"Base.wait-Tuple{Server}",href:"#Base.wait-Tuple{Server}"},[i("span",{class:"jlbinding"},"Base.wait")],-1)),s[246]||(s[246]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[248]||(s[248]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Wait on the server task, i.e. block execution by bringing the server event loop to the foreground.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[247]||(s[247]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/implementation.jl#L361-L365",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Cs,[i("summary",null,[s[249]||(s[249]=i("a",{id:"Bonito.HTTPServer.browser_display-Tuple{}",href:"#Bonito.HTTPServer.browser_display-Tuple{}"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.browser_display")],-1)),s[250]||(s[250]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[252]||(s[252]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">browser_display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Forces Bonito.App to be displayed in a browser window that gets opened.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[251]||(s[251]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/browser-display.jl#L32-L35",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",fs,[i("summary",null,[s[253]||(s[253]=i("a",{id:"Bonito.HTTPServer.local_url-Tuple{Server, Any}",href:"#Bonito.HTTPServer.local_url-Tuple{Server, Any}"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.local_url")],-1)),s[254]||(s[254]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[256]||(s[256]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">local_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, url)</span></span></code></pre></div><p>The local url to reach the server, on the server</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[255]||(s[255]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/implementation.jl#L184-L188",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ms,[i("summary",null,[s[257]||(s[257]=i("a",{id:"Bonito.HTTPServer.online_url-Tuple{Server, Any}",href:"#Bonito.HTTPServer.online_url-Tuple{Server, Any}"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.online_url")],-1)),s[258]||(s[258]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[260]||(s[260]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">online_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, url)</span></span></code></pre></div><p>The url to connect to the server from the internet. Needs to have <code>server.proxy_url</code> set to the IP or dns route of the server</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[259]||(s[259]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/implementation.jl#L196-L201",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Bs,[i("summary",null,[s[261]||(s[261]=i("a",{id:"Bonito.HTTPServer.tryrun-Tuple{Cmd}",href:"#Bonito.HTTPServer.tryrun-Tuple{Cmd}"},[i("span",{class:"jlbinding"},"Bonito.HTTPServer.tryrun")],-1)),s[262]||(s[262]=n()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[264]||(s[264]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tryrun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Try to run a command. Return <code>true</code> if <code>cmd</code> runs and is successful (exits with a code of <code>0</code>). Return <code>false</code> otherwise.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[263]||(s[263]=[i("a",{href:"https://github.com/SimonDanisch/Bonito.jl/blob/442cd072132d1ade31b35f642dc49166ffbedbe7/src/HTTPServer/browser-display.jl#L49-L54",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const qs=p(r,[["render",vs]]);export{xs as __pageData,qs as default};
