’Ç,j“Ù$0f885bc8-e754-4071-a39d-5186990eaf9d€£sub‚§payload‘Èxk’ÇJj“Ù$0f885bc8-e754-4071-a39d-5186990eaf9d‚¤1501Çe’¤1501¤1503Çe’¤1503
£sub‚§payloadÈf“‚³5138733910721558642Çh¤1501³5898053770577414332Çh¤1503Ú
˜((container)=> {
    const thumb = document.querySelector('[data-jscall-id="13"]');
    const track_active = document.querySelector('[data-jscall-id="12"]');
    const track = document.querySelector('[data-jscall-id="11"]');
    let isDragging = false;
    const nsteps_obs = __lookup_interpolated('5898053770577414332')
    let last_index = -1;
    function set_thumb_index(index) {
        if (index === last_index) {
            return
        }
        last_index = index;
        const thumb_width = thumb.offsetWidth / 2;
        const nsteps = nsteps_obs.value;
        const step_width = track.offsetWidth / (nsteps-1);
        const new_left = (index - 1) * step_width;
        thumb.style.left = (new_left - thumb_width) + 'px';  // Update the left position of the thumb
        track_active.style.width = new_left + 'px';  // Update the active track
    }
    __lookup_interpolated('5138733910721558642').on(idx=> set_thumb_index(idx));
    function set_thumb(e) {
        const nsteps = nsteps_obs.value;
        const thumb_width = thumb.offsetWidth / 2;
        const width = track.offsetWidth;
        const step_width = width / (nsteps - 1);
        let new_left = e.clientX - container.getBoundingClientRect().left;
        new_left = Math.max(new_left, 0);
        new_left = Math.min(new_left, width);
        new_left = Math.round(new_left / step_width) * step_width;
        thumb.style.left = (new_left - thumb_width) + 'px';  // Update the left position of the thumb
        track_active.style.width = new_left + 'px';  // Update the active track
        const index = Math.round((new_left / width) * (nsteps - 1));
        last_index = index;
        if (index !== __lookup_interpolated('5138733910721558642').value) {
            __lookup_interpolated('5138733910721558642').notify(index + 1);
        }
    }
    const controller = new AbortController();
    document.addEventListener('mousedown', function (e) {
        if(e.target === thumb || e.target === track_active || e.target === track || e.targar === container){
            isDragging = true;
            set_thumb(e);
            e.preventDefault();  // Prevent default behavior
        }
    }, { signal: controller.signal});
    document.addEventListener('mouseup', function () {
        if (!document.body.contains(container)) {
            controller.abort();
        }
        isDragging = false;
    }, { signal: controller.signal });
    document.addEventListener('mousemove', function (e) {
        if (isDragging) {
            set_thumb(e);
        }
    }, { signal: controller.signal });
    set_thumb_index(__lookup_interpolated('5138733910721558642').value)
}
)(document.querySelector('[data-jscall-id="10"]'));Ù;/home/runner/work/Bonito.jl/Bonito.jl/src/components.jl:338¨msg_type¡2¨msg_type¡9